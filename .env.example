# --- Шаблон файла переменных окружения (.env.example) ---
# Скопируйте этот файл в .env и заполните своими значениями.
# НЕ добавляйте файл .env в систему контроля версий (git).

# --- Настройки Flask ---
# Режим работы приложения: development (для локальной отладки) или production (для сервера)
FLASK_ENV=production

# Секретный ключ для подписи сессий. ДОЛЖЕН БЫТЬ ЗАМЕНЕН на уникальную, случайную и надежную строку.
# Сгенерировать можно командой в терминале Linux: openssl rand -hex 32
FLASK_SECRET_KEY="your-super-secret-and-long-random-string-here"


# --- Настройки базы данных PostgreSQL ---
# Эти значения должны совпадать с теми, что используются в docker-compose.prod.yml
POSTGRES_DB=tracker_db
POSTGRES_USER=tracker_user
# Придумайте и установите надежный пароль для базы данных
POSTGRES_PASSWORD="your_strong_postgres_password_here"


# --- Строка подключения для SQLAlchemy ---
# Эта строка собирается из переменных выше и имени сервиса 'db' из docker-compose.prod.yml
SQLALCHEMY_DATABASE_URI=postgresql://tracker_user:your_strong_postgres_password_here@db:5432/tracker_db


# --- Настройки сервера и QR-кодов ---
# Публичный IP-адрес или домен вашего сервера.
# Важно для корректной генерации URL в QR-кодах.
SERVER_PUBLIC_IP=192.168.1.100
SERVER_PORT=5000

# Хост и порт, которые слушает веб-сервер внутри Docker-контейнера (обычно не меняются).
HOST=0.0.0.0
PORT=5000


# --- Настройки логирования ---
# Уровень логирования: DEBUG, INFO, WARNING, ERROR, CRITICAL
# Для production рекомендуется INFO. Для отладки - DEBUG.
LOG_LEVEL=INFO


# --- Учетные данные для Microsoft Graph API ---
# Эти данные необходимо получить после регистрации приложения в Azure Active Directory.

# ID приложения (клиента) из портала Azure
MS_CLIENT_ID=""

# Секрет клиента, сгенерированный в портале Azure
MS_CLIENT_SECRET=""

# ID каталога (клиента) из портала Azure
MS_TENANT_ID=""

# Email или User Principal Name пользователя, в чьем OneDrive будут искаться файлы.
MS_ONEDRIVE_USER_ID=""